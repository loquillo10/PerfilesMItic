// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerfilesMItic.Data;

namespace PerfilesMItic.Migrations
{
    [DbContext(typeof(PerfilesMIticContext))]
    partial class PerfilesMIticContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APPWEB.Models.Ciudad", b =>
                {
                    b.Property<int>("IdCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCiudad");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("APPWEB.Models.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDepartamento");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("APPWEB.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdFuncionario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailParticular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCiudad")
                        .HasColumnType("int");

                    b.Property<int?>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<int?>("IdHijos")
                        .HasColumnType("int");

                    b.Property<int?>("IdPais")
                        .HasColumnType("int");

                    b.Property<byte[]>("JpgImagen")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Imagen");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TelefonoMovil")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TipoFuncionario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdHijos");

                    b.HasIndex("IdPais");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("APPWEB.Models.Hijo", b =>
                {
                    b.Property<int>("IdHijo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimientoH")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cantidadHijos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHijo");

                    b.ToTable("Hijo");
                });

            modelBuilder.Entity("APPWEB.Models.Pais", b =>
                {
                    b.Property<int>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPais");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("APPWEB.Models.Funcionario", b =>
                {
                    b.HasOne("APPWEB.Models.Ciudad", "Ciudad")
                        .WithMany()
                        .HasForeignKey("IdCiudad");

                    b.HasOne("APPWEB.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("IdDepartamento");

                    b.HasOne("APPWEB.Models.Hijo", "Hijo")
                        .WithMany()
                        .HasForeignKey("IdHijos");

                    b.HasOne("APPWEB.Models.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("IdPais");

                    b.Navigation("Ciudad");

                    b.Navigation("Departamento");

                    b.Navigation("Hijo");

                    b.Navigation("Pais");
                });
#pragma warning restore 612, 618
        }
    }
}
