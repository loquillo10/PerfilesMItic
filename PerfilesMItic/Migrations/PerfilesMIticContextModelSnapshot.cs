// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerfilesMItic.Data;

namespace PerfilesMItic.Migrations
{
    [DbContext(typeof(PerfilesMIticContext))]
    partial class PerfilesMIticContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PerfilesMItic.Models.Administrativo", b =>
                {
                    b.Property<int>("IdAdministrativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargo_Funcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Dependencia_Funcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Horario")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Interno_Telefono")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SuperiorInmediato")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdAdministrativo");

                    b.ToTable("Administrativo");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Barrio", b =>
                {
                    b.Property<int>("IdBarrio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("NombreB")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBarrio");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Barrio");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Ciudad", b =>
                {
                    b.Property<int>("IdCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCiudad");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Conyuge", b =>
                {
                    b.Property<int>("IdConyuge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CedulaC")
                        .HasColumnType("int");

                    b.Property<int>("CelularC")
                        .HasColumnType("int");

                    b.Property<int?>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("NombreC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SexoC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TelefonoC")
                        .HasColumnType("int");

                    b.HasKey("IdConyuge");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("Conyuge");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDepartamento");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Emergencia", b =>
                {
                    b.Property<int>("IdEmergencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Movil")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Celular");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LineaBaja");

                    b.HasKey("IdEmergencia");

                    b.ToTable("Emergencia");
                });

            modelBuilder.Entity("PerfilesMItic.Models.EstudiosRealizados", b =>
                {
                    b.Property<int>("IdEstudio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Institucion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Titulo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IdEstudio");

                    b.ToTable("EstudiosRealizados");
                });

            modelBuilder.Entity("PerfilesMItic.Models.ExperienciaLaboral", b =>
                {
                    b.Property<int>("IdExperiencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entidad")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Institucion");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("TiempoTrabajado")
                        .HasColumnType("datetime2")
                        .HasColumnName("Horas");

                    b.HasKey("IdExperiencia");

                    b.ToTable("ExperienciaLaboral");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Familiar", b =>
                {
                    b.Property<int>("IdFamiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NombreF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoFamiliar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFamiliar");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Familiar");
                });

            modelBuilder.Entity("PerfilesMItic.Models.FuncionPublica", b =>
                {
                    b.Property<int>("IdFP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdFuncionPublica")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoFP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("NombreFP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFP");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("FuncionPublica");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdFuncionario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailParticular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBarrio")
                        .HasColumnType("int");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("int");

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pasaporte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RUC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegConducir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TelefonoMovil")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TipoFuncionario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vivienda")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Hijo", b =>
                {
                    b.Property<int>("IdHijo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimientoH")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("NombreH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cantidadHijos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedulaH")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHijo");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("Hijo");
                });

            modelBuilder.Entity("PerfilesMItic.Models.InfoMedica", b =>
                {
                    b.Property<int>("IdMedica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Enfermedad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrupoSanguineo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NombreSeguro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroCarnet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMedica");

                    b.ToTable("InfoMedica");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Pais", b =>
                {
                    b.Property<int>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPais");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Barrio", b =>
                {
                    b.HasOne("PerfilesMItic.Models.Funcionario", null)
                        .WithMany("Barrio")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Ciudad", b =>
                {
                    b.HasOne("PerfilesMItic.Models.Funcionario", null)
                        .WithMany("Ciudades")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Conyuge", b =>
                {
                    b.HasOne("PerfilesMItic.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("IdFuncionario");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Departamento", b =>
                {
                    b.HasOne("PerfilesMItic.Models.Funcionario", null)
                        .WithMany("Departamento")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Familiar", b =>
                {
                    b.HasOne("PerfilesMItic.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("PerfilesMItic.Models.FuncionPublica", b =>
                {
                    b.HasOne("PerfilesMItic.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("IdFuncionario");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Hijo", b =>
                {
                    b.HasOne("PerfilesMItic.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("IdFuncionario");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Pais", b =>
                {
                    b.HasOne("PerfilesMItic.Models.Funcionario", null)
                        .WithMany("PaisNacimiento")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("PerfilesMItic.Models.Funcionario", b =>
                {
                    b.Navigation("Barrio");

                    b.Navigation("Ciudades");

                    b.Navigation("Departamento");

                    b.Navigation("PaisNacimiento");
                });
#pragma warning restore 612, 618
        }
    }
}
